--------------------------------------------------------
-- CREACION/ BORRADO DE TABLAS
--------------------------------------------------------

--------------------------------------------------------
--  BORRADO DE TABLAS
--------------------------------------------------------
DROP TABLE FACTURAS;
DROP TABLE ALBARANES;
DROP TABLE ALMACENES;
DROP TABLE LINEAPEDIDOS;
DROP TABLE ESTADOPEDIDOS;
DROP TABLE PEDIDOS;
DROP TABLE CLIENTES;
DROP TABLE OFERTAS; 
DROP TABLE PRODUCTOS;
DROP TABLE DIRECCIONES;
--------------------------------------------------------
--  CREACION DE TABLAS
--------------------------------------------------------
CREATE TABLE DIRECCIONES(
	ID_DIRECCION VARCHAR(50),
	CIUDAD VARCHAR(50),
	CP INT,
	CALLE VARCHAR(50),
	NUMERO INT,
	PRIMARY KEY(ID_DIRECCION)
);

CREATE TABLE PRODUCTOS(
	CODIGO VARCHAR(50),
	NOMBRE VARCHAR(50),
	DESCRIPCION VARCHAR(300),
	TIPOPRODUCTO VARCHAR(30) NOT NULL CHECK(TIPOPRODUCTO IN('equipoSoldadura','consumible','repuesto')),
	DISPONIBILIDAD VARCHAR(20) NOT NULL CHECK(DISPONIBILIDAD IN('Disponible','No disponible')),
	PRECIO FLOAT,
	URLDOCU VARCHAR(300),
	URLIMG VARCHAR(300),
	STOCK INT,
	PARTNUMBER VARCHAR(50),
	MODELO VARCHAR(50),
	PRIMARY KEY(CODIGO)
);
CREATE TABLE CLIENTES(
	IDCLIENTE VARCHAR(50),
	NOMBRE_CLI VARCHAR(20),
	APP_CLI VARCHAR(20),
	APM_CLI VARCHAR(20),
	EMAIL VARCHAR(50),
	DNI CHAR(9) UNIQUE,
	TELEFONO INT,
	ID_DIRECCION2 VARCHAR(50),
	PRIMARY KEY(IDCLIENTE),
	FOREIGN KEY(ID_DIRECCION2) REFERENCES DIRECCIONES(ID_DIRECCION)
);
CREATE TABLE PEDIDOS(
	IDPEDIDO VARCHAR(50), 
	FECHA DATE,
	PRECIOTOTAL FLOAT,
	IDCLIENTE1 VARCHAR(50),
	ID_DIRECCION1 VARCHAR(50),
	PRIMARY KEY(IDPEDIDO),
	FOREIGN KEY(IDCLIENTE1) REFERENCES CLIENTES(IDCLIENTE),
    FOREIGN KEY(ID_DIRECCION1) REFERENCES DIRECCIONES(ID_DIRECCION)
);
CREATE TABLE ESTADOPEDIDOS(
	ESTADOPEDIDO VARCHAR(20) NOT NULL CHECK(ESTADOPEDIDO IN('Enviado','En proceso',
	'Incidencia','Cancelado','Pagado','Pendiente de pago','Pago cancelado','Confirmado','Enviado','En espera')),
	IDPEDIDO1 VARCHAR(50),
	PRIMARY KEY(ESTADOPEDIDO),
	FOREIGN KEY(IDPEDIDO1) REFERENCES PEDIDOS(IDPEDIDO)
);
CREATE TABLE LINEAPEDIDOS(
	NUMLINE VARCHAR(50),
	CANTIDADPEDIDO INT,
    PRECIO FLOAT,
    CODIGO_PROD1 VARCHAR(50),
    IDPEDIDO3 VARCHAR(50),
    PRIMARY KEY(NUMLINE),
    FOREIGN KEY(CODIGO_PROD1) REFERENCES PRODUCTOS(CODIGO),
    FOREIGN KEY(IDPEDIDO3)	  REFERENCES PEDIDOS(IDPEDIDO)
);
CREATE TABLE OFERTAS(
	CODIGO VARCHAR(50),
	FECHA_INICIO DATE,
    FECHA_FIN DATE,
	PRECIOOFERTADO FLOAT,
	CODIGO_PROD2 VARCHAR(50),
	PRECIOANTES FLOAT,
	PRIMARY KEY(CODIGO),
	FOREIGN KEY(CODIGO_PROD2) REFERENCES PRODUCTOS(CODIGO)
);
CREATE TABLE ALMACENES(
	IDALMACEN VARCHAR(50),
	NOMBRE VARCHAR(50),
	ID_DIRECCION3 VARCHAR(50),
	PRIMARY KEY(IDALMACEN),
	FOREIGN KEY(ID_DIRECCION3) REFERENCES DIRECCIONES(ID_DIRECCION)
);
CREATE TABLE ALBARANES(
	IDALBARAN VARCHAR(50),
	IDPEDIDO2 VARCHAR(50),
	PRIMARY KEY(IDALBARAN),
	FOREIGN KEY(IDPEDIDO2) REFERENCES PEDIDOS(IDPEDIDO)
);
CREATE TABLE FACTURAS(
	IDFACTURA VARCHAR(50),
	TIPOFORMAPAGO VARCHAR(30) NOT NULL CHECK(TIPOFORMAPAGO IN('Tarjeta de Cr√©dito','PayPal','Transferencia Bancaria')),
	PRECIOTOTAL FLOAT,
	IDALBARAN1 VARCHAR(50),
	PRIMARY KEY(IDFACTURA),
	FOREIGN KEY(IDALBARAN1) REFERENCES ALBARANES(IDALBARAN)
);
-------------------------------------------------------------
-- SECUENCIAS Y TRIGGERS ASOCIADOS A GESTION DE SECUENCIAS
-------------------------------------------------------------

--Secuencia IDCLIENTE
CREATE   SEQUENCE sec_cliente
  INCREMENT BY 1 START WITH 1;

  --Secuencia PRODUCTO
CREATE   SEQUENCE sec_producto
  INCREMENT BY 1 START WITH 1;

  --Secuencia IDPEDIDO
CREATE  SEQUENCE sec_pedido
  INCREMENT BY 1 START WITH 1;

--Secuencia IDALBARAN
CREATE  SEQUENCE sec_albaran
  INCREMENT BY 1 START WITH 1;

--Secuencia IDFACTURA
CREATE SEQUENCE sec_factura
  INCREMENT BY 1 START WITH 1;

  --Secuencia LINEAPEDIDOS
CREATE SEQUENCE sec_lineaPedidos
  INCREMENT BY 1 START WITH 1;

--Secuencia IDOFERTA
CREATE SEQUENCE sec_oferta
  INCREMENT BY 1 START WITH 1;

  --Secuencia ID_DIRECCION
CREATE SEQUENCE sec_direccion
  INCREMENT BY 1 START WITH 1;
  
  --Secuencia ID_ALMACEN
CREATE SEQUENCE sec_almacen
  INCREMENT BY 1 START WITH 1;

--TRIGGERS ASOCIADOS A GESTION DE SECUENCIAS

 CREATE OR REPLACE TRIGGER crea_ID_almacen
  BEFORE INSERT ON ALMACENES
  FOR EACH ROW
  BEGIN
  SELECT sec_albaran.NEXTVAL INTO :NEW.IDALMACEN FROM DUAL;
  END;
  /
 CREATE OR REPLACE TRIGGER crea_ID_cliente
  BEFORE INSERT ON CLIENTES
  FOR EACH ROW
  BEGIN
  SELECT sec_cliente.NEXTVAL INTO :NEW.IDCLIENTE FROM DUAL;
  END;
/
CREATE OR REPLACE TRIGGER crea_ID_producto
  BEFORE INSERT ON PRODUCTOS
  FOR EACH ROW
  BEGIN
  SELECT sec_producto.NEXTVAL INTO :NEW.CODIGO FROM DUAL;
  END;
/
CREATE OR REPLACE TRIGGER crea_ID_pedido
  BEFORE INSERT ON PEDIDOS
  FOR EACH ROW
  BEGIN
  SELECT sec_pedido.NEXTVAL INTO :NEW.IDPEDIDO FROM DUAL;
  END;
/
CREATE OR REPLACE TRIGGER crea_ID_albaran
  BEFORE INSERT ON ALBARANES
  FOR EACH ROW
  BEGIN
  SELECT sec_albaran.NEXTVAL INTO :NEW.IDALBARAN FROM DUAL;
  END;
/
  CREATE OR REPLACE TRIGGER crea_LINEAPEDIDOS
  BEFORE INSERT ON LINEAPEDIDOS
  FOR EACH ROW
  BEGIN
  SELECT sec_LINEAPEDIDOS.NEXTVAL INTO :NEW.numline FROM DUAL;
  END;
/
CREATE OR REPLACE TRIGGER crea_ID_factura
  BEFORE INSERT ON FACTURAS
  FOR EACH ROW
  BEGIN
  SELECT sec_factura.NEXTVAL INTO :NEW.IDFACTURA FROM DUAL;
  END;
/
CREATE OR REPLACE TRIGGER crea_ID_oferta
  BEFORE INSERT ON OFERTAS
  FOR EACH ROW
  BEGIN
  SELECT sec_oferta.NEXTVAL INTO :NEW.CODIGO FROM DUAL;
  END;
/
CREATE OR REPLACE TRIGGER crea_ID_direccion
  BEFORE INSERT ON DIRECCIONES
  FOR EACH ROW
  BEGIN
  SELECT sec_direccion.NEXTVAL INTO :NEW.ID_DIRECCION FROM DUAL;
  END;
/